{% from "../spinner/macro.njk" import frontendUiSpinner %}


{% set progressButton = params.translations %}


{# Set classes for this component #}
{%- set classNames = "govuk-button govuk-button--progress" -%}

{%- if params.classes %}
  {% set classNames = classNames + " " + params.classes %}
{% endif %}
{% if params.disabled %}
  {% set classNames = classNames + " govuk-button--disabled" %}
{% endif -%}

{%- if params.element %}
  {% set element = params.element | lower %}
{% else %}
  {% if params.href %}
    {% set element = 'a' %}
  {% else %}
    {% set element = 'button' %}
  {% endif %}
{% endif -%}

{% if params.isStartButton %}
  {% set iconHtml %}
{#- The SVG needs `focusable="false"` so that Internet Explorer does not
treat it as an interactive element - without this it will be
'focusable' when using the keyboard to navigate. #}
<svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
  <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"/>
</svg>
  {% endset %}
  {% set classNames = classNames + " govuk-button--start" %}
{% endif %}

{#- Define common attributes that we can use across all element types #}

{%- set commonAttributes %} class="{{ classNames }}" data-module="govuk-button"{% for attribute, value in params.attributes %} {{attribute}}="{{value}}"{% endfor %}{% if params.id %} id="{{ params.id }}"{% endif %}{% endset %}

{#- Define common attributes we can use for both button and input types #}

{%- set buttonAttributes %}{% if params.name %} name="{{ params.name }}"{% endif %}{% if params.disabled %} disabled="disabled" aria-disabled="true"{% endif %}{% if params.preventDoubleClick !== undefined %} data-prevent-double-click="{{params.preventDoubleClick}}"{% endif %}{% endset %}


{%- if element == 'a' %}
<a href="{{ params.href if params.href else '#' }}" role="button" draggable="false" {{- commonAttributes | safe }}
onclick="
    this.blur();
    this.classList.add('govuk-button--progress-loading');
    this.innerText = '{{ progressButton.waitingText }}';
    setTimeout(() => {
      this.innerText = '{{ progressButton.longWaitingText }}';
    }, 5000);
    setTimeout(() => {
      window.location.href = '{{ params.errorPage | default('#') }}';
    }, 10000);
  ">
  {% if params.html %}
    {{ params.html | safe }}
  {% elseif params.text %}
    {{ params.text | safe }}
  {% else %}
    {{ progressButton.text }}
  {% endif %}
  {{- iconHtml | safe | trim | indent(2, true) if iconHtml -}}
</a>

{%- elseif element == 'button' %}
<button {%- if params.value %} value="{{ params.value }}"{% endif %}{%- if params.type %} type="{{ params.type }}"{% endif %} {{- buttonAttributes | safe }} {{- commonAttributes | safe }}
onclick="
    this.blur();
    this.classList.add('govuk-button--progress-loading');
    this.innerText = '{{ progressButton.waitingText }}';
    setTimeout(() => {
      this.innerText = '{{ progressButton.longWaitingText }}';
    }, 5000);
    setTimeout(() => {
      window.location.href = '{{ params.errorPage | default('#') }}';
    }, 10000);
  ">
  {% if params.html %}
    {{ params.html | safe }}
  {% elseif params.text %}
    {{ params.text | safe }}
  {% else %}
    {{ progressButton.text }}
  {% endif %}
  {{- iconHtml | safe | trim | indent(2, true) if iconHtml -}}
</button>

{%- elseif element == 'input' %}
<input value="{{ params.value }}" type="{{ params.type if params.type else 'submit'}}"{{- buttonAttributes | safe }} {{- commonAttributes | safe }}
  onclick="
    this.blur();
    this.classList.add('govuk-button--progress-loading');
    this.value = '{{ progressButton.waitingText }}'; 
    setTimeout(() => {
      this.value = '{{ progressButton.longWaitingText }}';
    }, 5000);
    setTimeout(() => {
      window.location.href = '{{ params.errorPage | default('#') }}';
    }, 10000);
    return false;
  "
>
{{- iconHtml | safe | trim | indent(2, true) if iconHtml -}}
{% endif %}
