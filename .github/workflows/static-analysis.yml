name: Static analysis

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: static-analysis-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

jobs:
  coverage:
    name: Collect coverage
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"
      - run: npm install

      # required set up steps for Github architecture
      - run: npm i @rollup/rollup-linux-x64-gnu --no-save
      - run: npm i @nx/nx-linux-x64-gnu --no-save

      - uses: nrwl/nx-set-shas@v4

      - run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - run: npx nx run-many -t build

      - run: npx nx affected -t lint test test:integration:ci --verbose
        env:
          NX_DISABLE_DB: true

      - name: Cache test coverage reports
        id: cache-coverage-reports
        uses: actions/cache@v4
        with:
          path: "**/coverage"
          key: ${{ runner.os }}-${{ github.run_id }}-coverage-reports

      - name: Generate matrix for affected packages
        id: generate-matrix
        run: |
          OUTPUT=$(npx nx show projects --affected --json)
          echo "::set-output name=matrix::$(echo $OUTPUT | jq -c '[.[] | select(startswith("@govuk-one-login/frontend")) | sub("^@govuk-one-login/"; "")]')"

  sonarcloud:
    name: SonarCloud
    needs: coverage
    if: ${{ needs.coverage.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TAG: ${{ fromJson(needs.coverage.outputs.matrix || '[]') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached coverage reports
        id: cache-coverage-reports-restore
        uses: actions/cache/restore@v4
        with:
          path: "**/coverage"
          key: ${{ runner.os }}-${{ github.run_id }}-coverage-reports

      - name: Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        with:
          projectBaseDir: ./packages/${{ matrix.TAG }}
        env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
