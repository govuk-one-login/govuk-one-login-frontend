name: Static analysis

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: static-analysis-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

jobs:
  coverage:
    name: Collect coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm install

      - uses: nrwl/nx-set-shas@v4

      - run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - run: npx nx affected -t lint test build test:integration:ci --verbose
      
      - name: Cache test coverage reports
        id: cache-coverage-reports
        uses: actions/cache@v4
        with:
          path: "**/coverage"
          key: ${{ runner.os }}-${{ github.run_id }}-coverage-reports

  sonarcloud:
    name: SonarCloud
    needs: coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TAG:
          [
            "frontend-analytics",
            "frontend-asset-loader",
            "frontend-language-toggle",
            "frontend-passthrough-headers",
            "frontend-vital-signs",
          ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm install

      - uses: nrwl/nx-set-shas@v4

      - name: List affected packages
        run: |
          OUTPUT=$(npx nx show projects --affected --json)
          echo "affectedPackages=$OUTPUT" >> $GITHUB_ENV

      - name: Restore cached coverage reports
        id: cache-coverage-reports-restore
        uses: actions/cache/restore@v4
        with:
          path: "**/coverage"
          key: ${{ runner.os }}-${{ github.run_id }}-coverage-reports

      - name: Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        if: github.event_name == 'push' || contains(env.affectedPackages, matrix.TAG)
        with:
          projectBaseDir: ./packages/${{ matrix.TAG }}
        env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
