name: Release
on:
  workflow_dispatch:
    inputs:
      target:
        description: "Release package"
        required: true
        type: choice
        options:
          - "@govuk-one-login/alpha-component"
          - "@govuk-one-login/frontend-analytics"
          - "@govuk-one-login/frontend-language-toggle"
          - "@govuk-one-login/frontend-passthrough-headers"
          - "@govuk-one-login/frontend-vital-signs"
          - "@govuk-one-login/frontend-ui"
          - "@govuk-one-login/frontend-asset-loader"
          - "@govuk-one-login/frontend-device-intelligence"

      increment:
        description: "Increment"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

      first_release:
        description: "First release (from this repo)"
        required: true
        default: false
        type: boolean

      dry_run:
        description: "Dry run?"
        required: true
        default: false
        type: boolean

run-name: Release ${{ github.event.inputs.target }} ${{ github.event.inputs.increment }} ${{ github.event.inputs.first_release == 'true' && '--first-release' || '' }} ${{ github.event.inputs.dry_run == 'true' && '--dry-run' || '' }}

# Needed for nx-set-shas when run on the main branch
permissions:
  actions: read
  contents: write
  id-token: write # needed for provenance data generation

jobs:
  prepare-branch-for-main:
    name: Prepare branch for main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PUBLISHER_APP_ID }}
          private-key: ${{ secrets.PUBLISHER_APP_SECRET }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Node.js and cache node modules
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install

      # required set up steps for Github architecture
      - run: npm i @rollup/rollup-linux-x64-gnu --no-save
      - run: npm i @nx/nx-linux-x64-gnu --no-save

      - name: Set SHAs for affected packages
        uses: nrwl/nx-set-shas@v4

      - name: Print Environment Information
        run: npx nx report

      - name: Format, lint, test, and build affected packages
        run: npx nx run-many -t format,lint,test,build --projects=${{ github.event.inputs.target }}

      # This line is needed for nx affected to work when CI is running on a PR
      - name: Set up main branch tracking
        run: git branch --track main origin/main
        if: ${{ github.event_name == 'pull_request' }}

      - name: Configure git user
        run: |
          git config --global user.email "226340596+govuk-one-login-frontend-publisher[bot]@users.noreply.github.com"
          git config --global user.name "govuk-one-login-frontend-publisher[bot]"

      - name: Publish packages
        if: ${{ github.ref == 'refs/heads/main' }}
        run: npx nx release ${{ github.event.inputs.increment }} --projects=${{ github.event.inputs.target }} --yes ${{ github.event.inputs.first_release == 'true' && '--first-release' || '' }} ${{ github.event.inputs.dry_run == 'true' && '--dry-run' || '' }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
